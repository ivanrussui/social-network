{"version":3,"file":"static/js/212.a26d3c7b.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Mesage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://react-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Cv6bw\",\"dialog\":\"Dialogs_dialog__XaYb-\",\"active\":\"Dialogs_active__dFkPu\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport avatar from '../../../assets/img/avatar-name.jpg';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={`${s.dialog} + ${s.active}`}>\r\n            <img\r\n                srcSet={avatar}\r\n                alt={\"avatar\"}\r\n            />\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport avatar from '../../../assets/img/avatar-message.jpg';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img\r\n                srcSet={avatar}\r\n                alt={\"avatar\"}\r\n            />\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Mesage';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { FormControl } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              <Field component={FormControl} typeField={'textarea'} name={'newMessageBody'}\r\n                     validate={[required, maxLength50]} placeholder={'Enter your message'} />\r\n          </div>\r\n          <div>\r\n              <button>SEND</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(DialogForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // debugger;\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.name}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} id={m.id} key={m.message}/>);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n    // let onSendMessageClick = () => {  // отправка сообщения\r\n    //     props.sendMessage();\r\n    // };\r\n\r\n    // if (!props.isAuth) return <Navigate to={'/login'} />;\r\n\r\n    const addNewMessage = (message) => {\r\n        props.sendMessage(message.newMessageBody);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <DialogReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n// HOC\r\n// let AuthRedirectComponent =  withAuthRedirect(Dialogs);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n","import { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, typeField, ...props}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n            {typeField === 'textarea' && <textarea {...input} {...props} />}\r\n            {typeField === 'input' && <input {...input} {...props} />}\r\n            {showError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, component, typeField, validators = [], props = {}, text = '') => (\r\n    <div style={{display: 'flex'}}>\r\n        <Field placeholder={placeholder} name={name} component={component} typeField={typeField}\r\n               validate={validators} {...props}/>{text}\r\n    </div>\r\n)\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <textarea {...input} {...props} />\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <input {...input} {...props} />\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const FormControl = ({input, meta, children}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <children.type {...input} {...children.props} />\r\n//             {/*<textarea {...input} {...props} />*/}\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Textarea = props => {\r\n//     return<FormControl {...props}><textarea/></FormControl>\r\n// }\r\n// export const Input = props => {\r\n//     return<FormControl {...props}><input/></FormControl>\r\n// }\r\n\r\n","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// classes HOC\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n// functional HOC\r\n// export const withAuthRedirect = (Component) => {\r\n//\r\n//     let RedirectComponent = () => {\r\n//         if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n//         return <Component {...this.props} />;\r\n//     }\r\n//     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n//     return ConnectedAuthRedirectComponent;\r\n// }\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__0of4A\",\"error\":\"FormsControls_error__Wdj+e\",\"formSummaryError\":\"FormsControls_formSummaryError__Zo112\"};"],"names":["props","path","id","className","s","srcSet","avatar","alt","to","name","message","maxLength50","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControl","typeField","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","input","meta","touched","error","showError","styles","createField","validators","text","style","display","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}