{"version":3,"file":"static/js/257.3503a302.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWihtHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","webpack://react-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__Q7t5X\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ilVQk\",\"descriptionText\":\"ProfileInfo_descriptionText__EpyRx\",\"status\":\"ProfileInfo_status__5Y2D0\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__noyZM\"};","import React, {useEffect, useState} from \"react\";\r\nimport styles from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const changeStatusTrue = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const changeStatusFalse = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.ProfileStatus}>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={changeStatusTrue}>{props.status || 'No Status'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                           onBlur={changeStatusFalse}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport plug from '../../../assets/img/plug.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWihtHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) { // если в props profile нет или null или undefined\r\n        return <Spinner/> // отображаем спиннер\r\n    }\r\n    const photos = profile.photos.large;\r\n    const contacts = profile.contacts;\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                {photos ?\r\n                    <img src={photos} alt=\"avatar\"/> :\r\n                    <img src={plug} alt=\"Заглушка\"/>\r\n                }\r\n                <div className={s.descriptionText}>\r\n                    <div><b>О себе:</b> {profile.aboutMe}</div>\r\n                    {contacts.facebook || contacts.vk || contacts.instagram || contacts.github ?\r\n                        <div><b>Контакты:</b> <br/>\r\n                            <a href=\"facebook.com/\">{profile.contacts.facebook}</a> <br/>\r\n                            <a href=\"vk.com/dimych\">{profile.contacts.vk}</a> <br/>\r\n                            <a href=\"instagra.com/sds\">{profile.contacts.instagram}</a> <br/>\r\n                            <a href=\"github.com/\">{profile.contacts.github}</a> <br/>\r\n                        </div> :\r\n                        <p><b style={{color: 'red'}}>Контакты не указаны</b></p>\r\n                    }\r\n\r\n                    <div className={s.status}><b>Статус работы: </b>\r\n                        {profile.lookingForAJob ?\r\n                            <img src=\"https://avatanplus.com/files/resources/original/5693e5540266115231b7d02a.png\"\r\n                                 alt=\"smile\"/> :\r\n                            // 2 смайла на выбор)\r\n                            // <img src=\"http://cdn.onlinewebfonts.com/svg/img_437392.png\" alt=\"smile sad\"/>}\r\n                            <img\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Sert_-_sad_smile.svg/640px-Sert_-_sad_smile.svg.png\"\r\n                                alt=\"smile sad\"/>\r\n                        }\r\n                    </div>\r\n                    <div><b>Поиск работы:</b> {profile.lookingForAJobDescription}</div>\r\n                    <div><b>Полное имя:</b> {profile.fullName}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__WRLJL\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__AMcm8\",\"active\":\"Post_active__Bi3LN\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://i.pinimg.com/736x/f5/27/41/f52741fb62bf1d821948a49204406bdc.jpg\"\r\n                alt=\"avatar\"\r\n            />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.count} </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { FormControl } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    // debugger\r\n  return  (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n              {/*<Field name={'newPostText'} component={Textarea} typeField={'textarea'}*/}\r\n              <Field name={'newPostText'} component={FormControl} typeField={'textarea'}\r\n                     validate={[required, maxLength10]} placeholder={'Post message'}/>\r\n          </div>\r\n          <div>\r\n              <button>SEND</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // console.log('RENDER');\r\n// debugger;\r\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} count={p.count} id={p.id}\r\n                                                   key={p.message}/>);\r\n\r\n    const onAddPost = (post) => {\r\n        props.addPost(post.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <PostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    // console.log('profile')\r\n    return (\r\n        <>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk, getStatusThunk, updateStatusThunk} from \"../../redux/profileReducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super( props );\r\n        this.state = {\r\n            isShowMyProfile: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let profileId = this.props.router.params.userId;\r\n        let authorisedProfileId = this.props.authorizedProfileId;\r\n        // debugger\r\n        // if (!profileId) {\r\n        //     profileId = this.props.authorizedProfileId;\r\n        //     // profileId = 25141 // мой id\r\n        //     // profileId = 2  //  Димыча\r\n        // }\r\n\r\n        if (profileId) {\r\n\r\n            this.props.getProfileThunk( profileId );\r\n            this.props.getStatusThunk( profileId );\r\n\r\n        } else {\r\n            if (this.props.isAuth) {\r\n                this.props.getProfileThunk( authorisedProfileId );\r\n                this.props.getStatusThunk( authorisedProfileId );\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        let profileId = +this.props.router.params.userId;\r\n        let authorisedProfileId = this.props.authorizedProfileId;\r\n        let isShowMyProfile = this.state.isShowMyProfile;\r\n\r\n        if (isShowMyProfile) {\r\n\r\n            if (profileId === authorisedProfileId) {\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n\r\n            if (!profileId && this.props.isAuth) {\r\n                this.props.getProfileThunk( authorisedProfileId );\r\n                this.props.getStatusThunk( authorisedProfileId );\r\n                this.setState( {isShowMyProfile: false} )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // console.log('Render Profile');\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                        status={this.props.status} updateStatus={this.props.updateStatusThunk}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps Profile');\r\n    return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedProfileId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component {...props} router={{location, navigate, params}}/>\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileThunk, getStatusThunk, updateStatusThunk}),\r\n    withRouter,\r\n    // withNavigate\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n","import { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, typeField, ...props}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n            {typeField === 'textarea' && <textarea {...input} {...props} />}\r\n            {typeField === 'input' && <input {...input} {...props} />}\r\n            {showError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, component, typeField, validators = [], props = {}, text = '') => (\r\n    <div style={{display: 'flex'}}>\r\n        <Field placeholder={placeholder} name={name} component={component} typeField={typeField}\r\n               validate={validators} {...props}/>{text}\r\n    </div>\r\n)\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <textarea {...input} {...props} />\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Input = ({input, meta, ...props}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <input {...input} {...props} />\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const FormControl = ({input, meta, children}) => {\r\n//     const showError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + ' ' + (showError && styles.error)}>\r\n//             <children.type {...input} {...children.props} />\r\n//             {/*<textarea {...input} {...props} />*/}\r\n//             {showError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Textarea = props => {\r\n//     return<FormControl {...props}><textarea/></FormControl>\r\n// }\r\n// export const Input = props => {\r\n//     return<FormControl {...props}><input/></FormControl>\r\n// }\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__0of4A\",\"error\":\"FormsControls_error__Wdj+e\",\"formSummaryError\":\"FormsControls_formSummaryError__Zo112\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","Spinner","photos","large","contacts","s","src","alt","plug","aboutMe","facebook","vk","instagram","github","href","style","color","lookingForAJob","lookingForAJobDescription","fullName","message","count","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","FormControl","typeField","validate","required","placeholder","React","postsElements","posts","reverse","map","p","id","post","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","isShowMyProfile","profileId","this","router","params","userId","authorisedProfileId","authorizedProfileId","getProfileThunk","getStatusThunk","isAuth","prevProps","prevState","snapshot","setState","updateStatusThunk","to","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams","input","meta","touched","error","showError","createField","validators","text","display","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}